pupup with available plugins
- save enabled state and other settings next to conf files
- clearly categorize plugins -> save depending on category and not on class -> check noteswidget.close!
- save settings of all plugins separately -> don't loose if they are disabled! -> test
-> select which are active depending on qSet (live remove/add/reorder tabs and remember, add and remove settings on the fly)


error when no channels
fix pylint error for reportMissingImports
rename generalize ESIBD -> ESIBD mode is only enabled by custom plugins -> 

- thin out old data -> look at longer history without slowing down
settings file compare/diff tool! -> highlight differences to current file

append data in separate thread (QProcess!!!) independent of plotting? output graph should run smoothly at all times
- make monitor code more efficient -> move to thread with socket?!  threading.Lock() , test with maxID 200
- Automated testing mode that cycles through main features and takes timing -> unit test framework https://stackify.com/unit-testing-basics-best-practices/
test GA again with beam scan
update manual

lower priority
- log pressure
- test PyInstaller
- publish (license / cite MSCA) -> git 
- monitor deposition with remote client https://www.riverbankcomputing.com/static/Docs/pyqtdeploy/
- add sample / solution manager -> save with metadata / associate with session
















timeit.timeit('w.scanPlot(update=True,done=False)',number=100,globals=globals())  # Update
timeit.timeit('w.scanPlot(update=False,done=True)',number=100,globals=globals())  # Done
w = self.mainTabWidget.widget(4); w = self.displayTabWidget.widget(5)

timeit.timeit('self.outputWidget.appendData()',number=100,globals=globals()) #0.2

0.25 -> tested with 10 channels with 40k datapoints,dispaytime 1 m (0.6 for 60 m) -> pyqtgraph not limiting unless displaying very long history while updating.
timeit.timeit('self.displayOutputData()',number=100,globals=globals())

timeit.timeit('self.outputWidget.globalUpdate()',number=100,globals=globals()) #1.6 comparable on desmond

2s,6s (60 ms per readout) on desmond -> critical for UI responsiveness (especially when combined with matplotlib)
timeit.timeit('vm.updateMonitors()',number=100,globals=globals())

depending on plot up to 20 s (200 ms for single 2D plot) !!! matplotlib is timing bottleneck that interferes with acquisition and blocks ui
timeit.timeit('self.displayContent()',number=100,globals=globals())
